{"title":"API Guide","markdown":{"yaml":{"title":"API Guide","description":"Detailed explanation of how RED-X interacts with the Borealis Dataverse API, including authentication, data fetching, and integration processes."},"headingText":"1.0 **API Token**","containsRefs":false,"markdown":"\n\n![](images/API_flow.png){width=70%}\n\nTo access the Borealis Dataverse API, RED-X uses a secure API token that is user-specific. This token is stored safely using R's system environment variables and never hard coded in the script. This helps protect the token from unauthorized access.\n\n```r\nApi_token <- Sys.getenv(\"API_TOKEN\") # Retrieve the API token from environment variables\n\n```\n> The API token is expected to be stored in your system environment (e.g., .Renviron file). This ensures sensitive credentials are encrypted and hidden from the codebase.\n\n**Access Levels**\n  \n  - Public users (without an API token) can only access openly available datasets.\n  - Authenticated users with an API token may access restricted datasets depending on their permissions.\n  - Super users (e.g., developers or internal collaborators) may edit the .Renviron file or project settings to include a higher-level API token to unlock more datasets.\n\nIf you are a developer or contributor with elevated access, you can add your token to your environment like so:\n\n```r\n# In .Renviron (do not share publicly!)\nAPI_TOKEN=your-personal-token-here\n\n```\n> Never share your API token publicly or hardcode it into your project files.\n\n### 2.0 **API Calls**\n\nThe app uses a recursive function to explore dataverses and extract dataset metadata. The first step involves calling the API to recursively retrieve all datasets from all sub-dataverses in the repository:\n\n```r\nfetch_all_datasets <- function(id, layer_titles = character()) {\n  base_url <- \"https://borealisdata.ca/api/dataverses/\"\n  ...\n}\n```\nThis function calls the following endpoint:\n\n```r\nhttps://borealisdata.ca/api/dataverses/{dataverse_id}/contents\n```\nwhich returns a list of datasets and nested dataverses. Each dataset is parsed and assigned metadata such as:\n\n- College (e.g., Ontario Agricultural College)\n- Department (e.g., Plant Agriculture)\n- Persistent DOI\n- Hierarchical structure of the repository\n\nEach dataverse is traversed recursively to capture all nested content.\n\n### 3.0 **Fetching Metadata and Study Details**\n\nUsing the persistentId of each dataset, metadata is extracted in schema.org format and the following endpoints:\n\n```r\n\"https://borealisdata.ca/api/datasets/export?exporter=schema.org&persistentId={DOI}\"\n```\nThis request returns structured metadata in Schema.org JSON format, including:\n- Study Title\n- Publication Date\n- Authors & affiliations\n- Keywords\n- Study Objectives\n- Spatial & temporal coverage\n- College and Department Name\n- Citation Info\n- Funding source\n- License & DOI\n- File Listings\n\nThe result is parsed and stored as a tibble for downstream processing\n\n### 4.0 **Downloading metadata and data Files**\n\nWhen needed, data files are downloaded directly via this endpoint:\n\n```r\nhttps://borealisdata.ca/api/access/dataset/:persistentId/?persistentId={DOI}\n```\n\nDownloaded ZIP archives are unzipped and filtered for:\n- .csv or .tab files (raw data)\n- README.txt files (metadata)\nOnly supported file formats are used in the app and are filtered using the function below;\n\n```r\nfilter_filelist(file_list, is_txt = TRUE)  # Get README.txt files\nfilter_filelist(file_list, is_txt = FALSE) # Get .csv/.tab files\n```\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"markdown"},"render":{"keep-tex":false,"keep-yaml":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","number-sections":false,"css":["styles.css"],"toc":true,"toc-depth":5,"output-file":"api.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.0.36","theme":{"light":"flatly","dark":"darkly"},"toc-title":"On this page","title":"API Guide","description":"Detailed explanation of how RED-X interacts with the Borealis Dataverse API, including authentication, data fetching, and integration processes."},"extensions":{"book":{"multiFile":true}}}}}